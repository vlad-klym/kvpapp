{"version":3,"file":"static/js/872.0526bbc4.chunk.js","mappings":"kKACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,6BCWhL,EARmB,SAACA,GAChB,OACI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAS,UACtC,SAAC,KAAO,CAACC,GAAI,YAAcH,EAAMI,GAAG,SAAEJ,EAAMK,QAGxD,ECCA,EAPgB,SAACL,GACb,OACI,gBAAKC,UAAWC,EAAAA,QAAU,SAAEF,EAAMM,SAE1C,E,iDCJMC,GAAcC,EAAAA,EAAAA,GAAiB,IAiBxBC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAhBZ,SAACV,GACpB,OACI,kBAAMY,SAAUZ,EAAMa,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUX,GACrBF,KAAM,iBACNc,YAAa,0BAExB,0BACI,4BAAQ,aAIxB,ICgBA,EA5BgB,SAACnB,GAEb,IAAIoB,EAAQpB,EAAMqB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAU,CAACpB,KAAMoB,EAAOpB,KAAMD,GAAIqB,EAAOrB,IAAK,IAC7FsB,EAAmBN,EAAMO,SAASH,KAAI,SAAAlB,GAAO,OAAI,SAAC,EAAO,CAACA,QAASA,EAAQA,SAAU,IACpEc,EAAMQ,eAO3B,OAAK5B,EAAM6B,QAEP,iBAAK5B,UAAWC,EAAAA,QAAU,WACtB,gBAAKD,UAAWC,EAAAA,aAAe,SAC1BoB,KAEL,gBAAKrB,UAAWC,EAAAA,SAAW,UACvB,yBAAMwB,OAEV,SAACjB,EAAmB,CAACG,SAbT,SAACkB,GACjB9B,EAAM+B,YAAYD,EAAOF,eAC7B,QAE0B,SAAC,KAAQ,CAACzB,GAAI,UAY5C,E,0DC5BI6B,EAA6B,SAACZ,GAAK,MAAM,CACzCS,OAAQT,EAAMa,KAAKJ,OACtB,ECgBD,GAAeK,E,QAAAA,KACXC,EAAAA,EAAAA,KAhBkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAEyB,SAACe,GACtB,MAAO,CACHL,YAAa,SAACH,GACVQ,GAASC,EAAAA,EAAAA,GAAmBT,GAChC,EAER,KDXgC,SAACU,GAAe,IACtCC,EAAiB,qGAIlB,OAJkB,8BACnB,WACI,OAAKC,KAAKxC,MAAM6B,QACT,SAACS,GAAS,UAAKE,KAAKxC,SADI,SAAC,KAAQ,CAACG,GAAI,UAEjD,KAAC,EAJkB,CAASsC,EAAAA,WAUhC,OAFqCN,EAAAA,EAAAA,IAAQH,EAARG,CAAqCI,EAG9E,GCEA,CAGEG,E","sources":["webpack://react-1/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Message/AddMessageForm/AddMessageForm.js","Components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__9je4w\",\"dialogsItems\":\"Dialogs_dialogsItems__qQZJk\",\"active\":\"Dialogs_active__NCGKA\",\"messages\":\"Dialogs_messages__SdTyN\",\"message\":\"Dialogs_message__K6PBw\"};","import s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import s from './../Dialogs.module.css';\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message","import {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea}\r\n                       validate={[required, maxLength50]}\r\n                       name={'newMessageBody'}\r\n                       placeholder={'Enter your message'} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)","import s from './Dialogs.module.css';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport {AddMessageFormRedux} from \"./Message/AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id}/>);\r\n    let messagesElements = state.messages.map(message => <Message message={message.message}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to={'/login'}/>;\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs","import React, {Component} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import {sendMessageCreator} from \"../../Redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","className","s","to","id","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","dialog","messagesElements","messages","newMessageBody","isAuth","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}